note
	description: "Pixel buffer that replaces original image file.%
		%The original version of this class has been generated by Image Eiffel Code."
	author: "Eiffel image embeder"
	date: "Sat, 07 Jan 2017 22:18:47 +0000"
	revision: "1.0"

class
	EXIT_PIXEL_BUFFER

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			make_with_size (14, 14)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(01,FF,FF,FF)A(45,A6,AA,AE)A(26,A8,A8,AE)A(02,80,80,80)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(01,FF,FF,FF)A(43,A7,A7,AB)A(5D,A7,AA,AA)A(CF,A8,A9,AC)A(FF,A7,A9,AC)A(EF,A8,A9,AC)A(B9,A7,AA,AC)A(4F,A8,A8,AB)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(16,A2,A2,A2)A(3E,A9,A9,A9)A(00,00,00,00)A(36,A5,A5,AA)A(3A,A7,AB,AB)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(8E,A7,A7,AB)A(FE,A7,A9,AC)A(4B,AA,AA,AD)A(40,A7,A7,AB)A(24,AA,AA,AA)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(AE,A7,AA,AB)A(CB,A7,AA,AB)A(CB,A7,AA,AB)A(E8,A7,A9,AD)A(FF,A7,A9,AC)A(FC,A7,A9,AB)A(62,A7,A7,AE)A(1F,A5,AD,AD)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(FE,A8,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(F8,A7,A9,AD)A(23,A8,A8,A8)A(00,00,00,00)A(CC,A8,A9,AD)
				A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(FE,A8,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(E7,A7,A9,AB)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(FE,A8,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(97,A5,A9,AC)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(FB,A7,AA,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(B9,A5,AA,AC)A(0B,A2,A2,A2)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(0C,AA,AA,AA)A(17,B1,B1,B1)A(17,B1,B1,B1)A(9B,A6,A9,AB)A(FF,A7,A9,AC)A(CA,A7,A9,AD)A(40,A7,A7,AB)A(24,AA,AA,AA)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(5F,A9,A9,AE)A(CD,A7,A9,AD)A(02,FF,FF,FF)A(3E,A5,A9,AD)A(20,9F,A7,A7)A(00,00,00,00)A(CC,A8,A9,AD)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)
				A(11,A5,A5,A5)A(5C,A9,A9,AC)A(32,A3,A3,A8)A(CE,A7,A8,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(FF,A7,A9,AC)A(8C,A8,A9,AB)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(0F,AA,AA,AA)A(30,A5,A5,AA)A(CD,A8,A9,AD)A(FB,A7,A9,AC)A(B2,A8,A9,AC)A(57,A7,AA,AD)A(0A,B3,B3,B3)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00)A(4D,A6,A9,AC)A(14,A6,A6,A6)A(00,00,00,00)A(00,00,00,00)A(00,00,00,00);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'.
		do
			c_colors_0 (a_ptr, 0)
		end

feature {NONE} -- Image data filling.

	fill_memory
			-- Fill image data into memory.
		local
			l_pointer: POINTER
		do
			if attached {EV_PIXEL_BUFFER_IMP} implementation as l_imp then
				l_pointer := l_imp.data_ptr
				if not l_pointer.is_default_pointer then
					build_colors (l_pointer)
					l_imp.unlock
				end
			end
		end

end -- EXIT_BUTTON
