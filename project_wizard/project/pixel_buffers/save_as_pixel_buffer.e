note
	description: "Pixel buffer that replaces original image file.%
		%The original version of this class has been generated by Image Eiffel Code."
	author: "Eiffel image embeder"
	date: "Sat, 07 Jan 2017 22:18:47 +0000"
	revision: "1.0"

class
	SAVE_AS_PIXEL_BUFFER

inherit
	EV_PIXEL_BUFFER

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data

	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
			{
				#define B(q) \
					#q
				#ifdef EIF_WINDOWS
				#define A(a,r,g,b) \
					B(\x##b\x##g\x##r\x##a)
				#else
				#define A(a,r,g,b) \
					B(\x##r\x##g\x##b\x##a)
				#endif
				char l_data[] = 
				A(E7,6D,80,DD)A(F1,AF,BB,EC)A(F1,AF,BB,EC)A(F5,C8,D0,F0)A(FA,DA,DF,F2)A(FA,DA,DF,F3)A(FA,DA,DF,F3)A(FA,D9,DF,F2)A(F9,DA,DF,F2)A(F9,DA,DF,F2)A(F8,DC,E1,F3)A(F4,CD,D5,F1)A(EC,AF,BC,EC)A(EC,AF,BC,EC)A(EC,AF,BC,EC)A(E1,6F,82,DE)A(E1,5E,6E,E4)A(FF,9F,A4,FE)A(FF,B7,B9,FB)A(FF,DE,DE,E5)A(FF,D7,D7,D7)A(FF,D7,D7,D7)A(FF,D7,D7,D7)A(FF,D7,D7,D7)A(FF,D7,D7,D7)A(FF,D7,D7,D7)A(FF,D7,D7,D7)A(FF,DD,DD,E1)A(FF,C3,C3,F9)A(FF,9F,A4,FE)A(FF,9F,A4,FE)A(E1,5E,6E,E4)A(E0,5B,6B,E4)A(FF,98,9D,FF)A(FF,CB,CB,F5)A(FF,D1,D1,D1)A(FF,D1,D1,D1)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,D1,D1,D1)A(FF,D3,D4,F2)A(FF,92,97,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,91,95,FF)A(FF,CE,CE,F2)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,CB,CB,CB)A(FF,D5,D6,EE)A(FF,88,8C,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,91,95,FF)A(FF,CD,CD,F0)A(FF,C5,C5,C5)A(FF,C5,C5,C5)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,C5,C5,C5)A(FF,D4,D4,ED)A(FF,88,8B,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)
				A(E0,5B,6B,E4)A(FF,91,96,FF)A(FF,C9,CA,F1)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,BE,BE,BE)A(FF,D0,D0,EC)A(FF,89,8C,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,9A,9A,FB)A(FF,D3,D3,DC)A(FF,BF,BF,BF)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,53,54,66)A(FF,CF,CF,D6)A(FF,AC,AC,F8)A(FF,94,99,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,89,8C,FF)A(FF,84,84,FE)A(FF,AB,AB,F9)A(FF,AF,AF,F9)A(FF,AF,AF,F9)A(FF,AF,AF,F9)A(FF,AF,AF,F9)A(FF,AF,AF,F9)A(FF,AD,AD,F9)A(FF,8D,8D,FE)A(FF,85,86,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,90,94,EF)A(FF,79,7C,C5)A(FF,76,7A,C1)A(FF,76,7A,C1)A(FF,76,7A,C1)A(FF,76,7A,C1)A(FF,76,7A,C1)A(FF,78,7C,C5)A(FF,92,96,F2)A(FF,99,9E,FF)A(FF,99,9E,FF)A(E0,5B,6B,E4)
				A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,88,8D,E1)A(FF,57,58,68)A(FF,8C,8C,A2)A(FF,8E,90,A1)A(FF,8E,90,A1)A(FF,8E,90,A1)A(FF,8E,90,A1)A(FF,8E,90,A1)A(FF,8B,8C,A2)A(FF,53,54,66)A(FF,8E,92,EB)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,64,67,A1)A(FF,9E,A0,BB)A(FF,C1,C5,DA)A(FF,7B,8E,ED)A(FF,A3,AE,E2)A(FF,D5,D5,D5)A(FF,D5,D5,D5)A(FF,D5,D5,D5)A(FF,D4,D4,D6)A(FF,94,95,AF)A(FF,6D,70,B0)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,61,63,9B)A(FF,A4,A5,BC)A(FF,8F,9D,E1)A(FF,39,5B,FF)A(FF,59,73,F4)A(FF,CC,CC,CC)A(FF,CC,CC,CC)A(FF,CC,CC,CC)A(FF,CC,CC,CC)A(FF,99,9A,AF)A(FF,69,6C,AA)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(E0,5B,6B,E4)A(FF,99,9E,FF)A(FF,99,9E,FF)A(FF,61,63,9B)A(FF,A3,A4,BB)A(FF,93,9F,DA)A(FF,42,62,FB)A(FF,63,7A,EE)A(FF,C4,C4,C4)A(FF,C4,C4,C4)A(FF,C4,C4,C4)A(FF,C4,C4,C4)A(FF,98,9A,AE)A(FF,69,6C,AA)A(FF,99,9E,FF)A(E0,5B,6B,E4)A(B3,3C,53,D7)A(FE,8F,97,FB)A(FF,99,9E,FF)A(FF,69,6C,A9)A(FF,93,95,AE)A(FF,BD,BD,BE)A(FF,B7,B9,C7)A(FF,BB,BC,C2)A(FF,BC,BC,BC)A(FF,BC,BC,BC)A(FF,BC,BC,BC)A(FF,BC,BC,BD)A(FF,88,89,A0)A(FF,72,76,BA)A(FF,99,9E,FF)A(E0,5B,6B,E4)
				A(05,00,33,CC)A(B1,3D,52,D7)A(E0,5C,6D,E5)A(E1,5A,6B,DD)A(F4,3C,41,66)A(F4,3E,44,6B)A(F6,46,4C,6A)A(F6,46,4C,6A)A(F6,46,4C,6A)A(F6,46,4C,6A)A(F6,46,4C,6A)A(F4,3E,43,6B)A(F4,3D,42,6A)A(E1,5A,6B,DF)A(E0,5C,6D,E5)A(DE,37,4D,D5);
				memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
			}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'.
		do
			c_colors_0 (a_ptr, 0)
		end

feature {NONE} -- Image data filling.

	fill_memory
			-- Fill image data into memory.
		local
			l_pointer: POINTER
		do
			if attached {EV_PIXEL_BUFFER_IMP} implementation as l_imp then
				l_pointer := l_imp.data_ptr
				if not l_pointer.is_default_pointer then
					build_colors (l_pointer)
					l_imp.unlock
				end
			end
		end

end -- SAVE_AS_PIXEL_BUFFER
